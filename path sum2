/
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   List<List<Integer>> dict=new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        ArrayList<Integer> arr=new ArrayList<>();
        dfs(root,targetSum,arr);
        return dict;
        
    }
    public void dfs(TreeNode root,int ts,ArrayList arr)
    {
        if(root==null) return;
        arr.add(root.val);
        if(root.val==ts && root.left==null && root.right==null)
        {   
            dict.add(new ArrayList<Integer>(arr));
            
        }
        else{
        dfs(root.left,ts-root.val,arr);
        dfs(root.right,ts-root.val,arr);
        }
        arr.remove(arr.size()-1);
    }
}
